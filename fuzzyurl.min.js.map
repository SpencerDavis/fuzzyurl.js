{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/constructor.js","src/fuzzyurl.js","src/match.js","src/protocols.js","src/strings.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Fuzzyurl","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"defaultFuzzyurl","protocol","username","password","hostname","port","path","query","fragment","fields","Object","keys","params","ps","assign","p","hasOwnProperty","prototype","equals","fu","equal","forEach","_this","Strings","Match","Protocols","maskDefaults","mask","fromString","_typeof","m","k","toString","fuzzyurl","string","match","url","matches","matchScores","bestMatch","masks","ms","map","scores","scoreValues","indexOf","reduce","x","y","urlProtocol","getProtocol","urlPort","getPort","fuzzyMatch","value","maskValue","slice","endsWith","revMask","strReverse","revValue","revMaskValue","str","rev","bestMask","bestScore","score","parseInt","portsByProtocol","ssh","http","https","protocolsByPort",22,80,443,"baseProtocol","split","pop","regex","RegExp","exec","out"],"mappings":"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","file":"generated.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nconst defaultFuzzyurl = {\n  protocol: null,\n  username: null,\n  password: null,\n  hostname: null,\n  port: null,\n  path: null,\n  query: null,\n  fragment: null\n};\nconst fields = Object.keys(defaultFuzzyurl);\n\n/**\n * Creates a Fuzzyurl object with the given parameter values.  Valid\n * `params` keys are: `protocol`, `username`, `password`, `hostname`,\n * `port`, `path`, `query`, and `fragment`; all default to null.\n *\n * @param {object} params Parameter values.\n *\n */\nfunction Fuzzyurl(params) {\n  let ps = Object.assign({}, defaultFuzzyurl, params || {});\n  for (var p in ps) {\n    if (defaultFuzzyurl.hasOwnProperty(p)) this[p] = ps[p];\n    else throw new Error(`Bad Fuzzyurl parameter: ${p}`);\n  }\n};\n\nFuzzyurl.prototype.equals = function (fu) {\n  var equal = true;\n  fields.forEach((f) => { if (this[f] != fu[f]) equal = false; });\n  return equal;\n};\n\nmodule.exports = Fuzzyurl;\n","'use strict';\n\nlet Fuzzyurl = require(\"./constructor\");\nlet Strings = Fuzzyurl.Strings = require(\"./strings\");\nlet Match = Fuzzyurl.Match = require(\"./match\");\nlet Protocols = Fuzzyurl.Protocols = require(\"./protocols\");\n\nconst maskDefaults = {\n  protocol: \"*\", username: \"*\", password: \"*\", hostname: \"*\",\n  port: \"*\", path: \"*\", query: \"*\", fragment: \"*\"\n};\nFuzzyurl.mask = function mask(params) {\n  var fu;\n  if (typeof params == \"string\") {\n    fu = Fuzzyurl.fromString(params);\n  }\n  else if (!params) {\n    fu = {};\n  }\n  else if (typeof params == \"object\") {\n    fu = params;\n  }\n  else {\n    throw new Error(\"params must be string, object, or null\");\n  }\n\n  var m = new Fuzzyurl(maskDefaults);\n  Object.keys(fu).forEach((k) => {\n    if (fu[k]) m[k] = fu[k];\n  });\n  return m;\n};\n\nFuzzyurl.toString = function toString(fuzzyurl) {\n  return Strings.toString(fuzzyurl);\n};\n\nFuzzyurl.prototype.toString = function () { return Strings.toString(this); };\n\nFuzzyurl.fromString = function fromString(string) {\n  return Strings.fromString(string);\n};\n\nFuzzyurl.match = function match(mask, url) {\n  var m = (typeof mask === \"string\") ? Strings.fromString(mask) : mask;\n  var u = (typeof url === \"string\") ? Strings.fromString(url) : url;\n  return Match.match(m, u);\n};\n\nFuzzyurl.matches = function matches(mask, url) {\n  var m = (typeof mask === \"string\") ? Strings.fromString(mask) : mask;\n  var u = (typeof url === \"string\") ? Strings.fromString(url) : url;\n  return Match.matches(m, u);\n};\n\nFuzzyurl.matchScores = function matchScores(mask, url) {\n  var m = (typeof mask === \"string\") ? Strings.fromString(mask) : mask;\n  var u = (typeof url === \"string\") ? Strings.fromString(url) : url;\n  return Match.matchScores(m, u);\n};\n\nFuzzyurl.bestMatch = function bestMatch(masks, url) {\n  var ms = masks.map((m) => (typeof m === \"string\") ? Strings.fromString(m) : m );\n  var u = (typeof url === \"string\") ? Strings.fromString(url) : url;\n  return Match.bestMatch(ms, u);\n};\n\nmodule.exports = Fuzzyurl;\n\n","'use strict';\n\nlet Protocols = require('./protocols');\n\n/**\n * If `mask` (which may contain * wildcards) matches `url` (which may not),\n * returns an integer representing how closely they match (higher is closer).\n * If `mask` does not match `url`, returns null.\n *\n * @param {Fuzzyurl} mask  Fuzzyurl mask to match with\n * @param {Fuzzyurl} url   Fuzzyurl URL to match\n * @returns {integer|null} total match score, or null if no match\n *\n */\nfunction match(mask, url) {\n  let scores = matchScores(mask, url);\n  let scoreValues = Object.keys(scores).map((k) => scores[k]);\n  if (scoreValues.indexOf(null) >= 0) return null;\n  return scoreValues.reduce((x, y) => x + y);\n}\n\n/**\n * If `mask` (which may contain * wildcards) matches `url` (which may not),\n * returns true; otherwise returns false.\n *\n * @param {Fuzzyurl} mask  Fuzzyurl mask to match with\n * @param {Fuzzyurl} url   Fuzzyurl URL to match\n * @returns {boolean} true if mask matches url, false otherwise\n */\nfunction matches(mask, url) {\n  return (match(mask, url) !== null);\n}\n\n/**\n * Returns a Fuzzyurl-like object containing values representing how well\n * different parts of `mask` and `url` match.  Values are integers for\n * matches or null for no match; higher integers indicate a better match.\n *\n * @param {Fuzzyurl} mask  Fuzzyurl mask to match with\n * @param {Fuzzyurl} url   Fuzzyurl URL to match\n * @returns {Fuzzyurl} Fuzzyurl-like object containing match scores\n */\nfunction matchScores(mask, url) {\n  if (\"object\" !== typeof mask) throw new Error('mask must be a Fuzzyurl object');\n  if (\"object\" !== typeof url) throw new Error('url must be a Fuzzyurl object');\n\n  // infer protocol from port, and vice versa\n  let urlProtocol = url.protocol || Protocols.getProtocol(url.port);\n  let urlPort = url.port || Protocols.getPort(url.protocol);\n\n  return {\n    protocol: fuzzyMatch(mask.protocol, urlProtocol),\n    username: fuzzyMatch(mask.username, url.username),\n    password: fuzzyMatch(mask.password, url.password),\n    hostname: fuzzyMatch(mask.hostname, url.hostname),\n    port: fuzzyMatch(mask.port, urlPort),\n    path: fuzzyMatch(mask.path, url.path),\n    query: fuzzyMatch(mask.query, url.query),\n    fragment: fuzzyMatch(mask.fragment, url.fragment)\n  };\n}\n\n/**\n * If `mask` (which may contain * wildcards) matches `url` (which may not),\n * returns 1 if `mask` and `url` match perfectly, 0 if `mask` and `url`\n * are a wildcard match, or null otherwise.\n *\n * Wildcard language:\n *\n *     *              matches anything\n *     foo/*          matches \"foo/\" and \"foo/bar/baz\" but not \"foo\"\n *     foo/**         matches \"foo/\" and \"foo/bar/baz\" and \"foo\"\n *     *.example.com  matches \"api.v1.example.com\" but not \"example.com\"\n *     **.example.com matches \"api.v1.example.com\" and \"example.com\"\n *\n * Any other form is treated as a literal match.\n *\n * @param {string} mask  String mask to match with (may contain wildcards).\n * @param {string} value String value to match.\n * @returns {integer|null} 1 for perfect match, 0 for wildcard match, null otherwise.\n */\nfunction fuzzyMatch(mask, value) {\n  if (mask === \"*\") return 0;\n  if (mask == value) return 1;\n  if (!mask || !value) return null;\n\n  if (mask.indexOf(\"**.\") == 0) {\n    let maskValue = mask.slice(3);\n    if (value.endsWith('.' + maskValue)) return 0;\n    if (maskValue === value) return 0;\n    return null;\n  }\n  if (mask.indexOf(\"*\") == 0) {\n    if (value.endsWith(mask.slice(1))) return 0;\n    return null;\n  }\n\n  // trailing wildcards are implemented more easily in reverse\n  let revMask = strReverse(mask);\n  let revValue = strReverse(value);\n\n  if (revMask.indexOf(\"**/\") == 0) {\n    let revMaskValue = revMask.slice(3);\n    if (revValue.endsWith('/' + revMaskValue)) return 0;\n    if (revValue === revMaskValue) return 0;\n    return null;\n  }\n  if (revMask.indexOf(\"*\") == 0) {\n    if (revValue.endsWith(revMask.slice(1))) return 0;\n    return null;\n  }\n\n  return null;\n}\n\n// this implementation is from the internet and it is fast\nfunction strReverse(str) {\n  var rev = '';\n  for (var i = str.length - 1; i >= 0; i--) rev += str[i];\n  return rev;\n}\n\n\n/**\n * From a list of Fuzzyurl `masks`, returns the index of the one which best\n * matches `url`.  Returns null if none of `masks` match.\n *\n * @param {array} masks  Array of Fuzzyurl URL masks to match with.\n * @param {Fuzzyurl} url Fuzzyurl URL to match.\n * @returns {integer|null} Index of best matching mask, or null if none match.\n */\nfunction bestMatch(masks, url) {\n  if (\"object\" !== typeof url) throw new Error(`url must be a Fuzzyurl object`);\n\n  var bestMask = null;\n  var bestScore = -1;\n  for (let i in masks) {\n    let m = masks[i];\n    if (\"object\" !== typeof m) throw new Error(`Got a non-Fuzzyurl mask: ${m}`);\n    let score = match(m, url);\n    if (score && score > bestScore) {\n      bestScore = score;\n      bestMask = parseInt(i);\n    }\n  }\n  return bestMask;\n}\n\nmodule.exports = { match, matches, matchScores, fuzzyMatch, bestMatch };\n\n","'use strict';\n\nconst portsByProtocol = {\n  ssh: \"22\",\n  http: \"80\",\n  https: \"443\"\n};\n\nconst protocolsByPort = {\n  22: \"ssh\",\n  80: \"http\",\n  443: \"https\"\n};\n\n/**\n * Given a protocol, returns the (string-formatted) port number, or null\n * if not found.\n *\n * @param {string|null} protocol\n * @returns {string|null} port\n */\nfunction getPort(protocol) {\n  if (!protocol) return null;\n  let baseProtocol = protocol.split(\"+\").pop();\n  return portsByProtocol[baseProtocol];\n}\n\n/**\n * Given a port number (string or integer), returns the protocol string,\n * or null if not found.\n *\n * @param {string|integer} port\n * @returns {string|null} protocol\n */\nfunction getProtocol(port) {\n  if (!port) return null;\n  return protocolsByPort[port.toString()];\n}\n\nmodule.exports = { getPort, getProtocol };\n\n","'use strict';\n\nlet Fuzzyurl = require('./constructor');\n\n// This regex is a lot more readable in the Elixir and Ruby versions.\nconst regex = new RegExp(\n  '^' +\n  '(?:(\\\\*|[a-zA-Z][A-Za-z+.-]+)://)?' +        // m[1] is protocol\n  '(?:(\\\\*|[a-zA-Z0-9%_.!~*\\'();&=+$,-]+)' +    // m[2] is username\n  '(?::(\\\\*|[a-zA-Z0-9%_.!~*\\'();&=+$,-]*))?' + // m[3] is password\n  '@)?' +\n  '([a-zA-Z0-9\\\\.\\\\*\\\\-]+?)?' +                 // m[4] is hostname\n  '(?::(\\\\*|\\\\d+))?' +                          // m[5] is port\n  '(/[^\\\\?\\\\#]*)?' +                            // m[6] is path\n  '(?:\\\\?([^\\\\#]*))?' +                         // m[7] is query\n  '(?:\\\\#(.*))?' +                              // m[8] is fragment\n  '$'\n);\n\nfunction fromString(str) {\n  if (typeof str !== \"string\") return null;\n  let m = regex.exec(str, regex);\n  if (!m) return null;\n  let fu = new Fuzzyurl({\n    protocol: m[1],\n    username: m[2],\n    password: m[3],\n    hostname: m[4],\n    port: m[5],\n    path: m[6],\n    query: m[7],\n    fragment: m[8]\n  });\n  return fu;\n}\n\nfunction toString(fuzzyurl) {\n  var out = '', f = fuzzyurl;\n  if (f.protocol) out += `${f.protocol}://`;\n  if (f.username) out += f.username;\n  if (f.password) out += `:${f.password}`;\n  if (f.username) out += `@`;\n  if (f.hostname) out += f.hostname;\n  if (f.port)     out += `:${f.port}`;\n  if (f.path)     out += f.path;\n  if (f.query)    out += `?${f.query}`;\n  if (f.fragment) out += `#${f.fragment}`;\n  return out;\n}\n\nmodule.exports = { fromString, toString };\n\n"]}